name: Build and Store

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read Node.js version from .nvmrc file
        run: |
          NODE_VERSION=$(cat .nvmrc)
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV
          echo "NODE_VERSION=$NODE_VERSION"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4

      - name: Check formatting
        run: npx nx format:check

      - name: Lint affected
        run: npx nx affected -t lint

      - name: Test affected
        run: npx nx affected -t test

      - name: Determine PREID
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            COMMIT_HASH=$(git rev-parse --short HEAD)
            echo "PREID=PR-${{ github.event.pull_request.number }}-${COMMIT_HASH}" >> $GITHUB_ENV
          else
            echo "PREID=" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Set version affected
        run: .github/scripts/release-command-loop-for-all-affected.sh version ${{ env.PREID }}

      - name: Build affected
        run: npx nx affected -t build

      - name: E2E affected
        run: npx nx affected -t e2e

      - name: Generate CHANGELOG affected
        run: .github/scripts/release-command-loop-for-all-affected.sh changelog ${{ env.PREID }}

      - name: Publish affected
        env:
          GH_TOKEN: ${{ github.token }}
        run: .github/scripts/release-command-loop-for-all-affected.sh publish ${{ env.PREID }}
